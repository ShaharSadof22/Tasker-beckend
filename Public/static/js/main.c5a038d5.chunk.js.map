{"version":3,"sources":["services/socketService.js","services/httpService.js","services/taskService.js","cmps/TaskPreview.jsx","cmps/AddTask.jsx","pages/TaskPage.jsx","store/actions/taskActions.js","App.js","store/reducers/taskReducer.js","store/store.js","index.js"],"names":["socket","setup","io","terminate","on","eventName","cb","off","emit","data","axios","Axios","create","withCredentials","endpoint","ajax","a","async","method","url","res","console","log","dir","response","status","window","location","assign","taskService","query","httpService","remove","taskId","update","task","title","description","importance","createdAt","Date","lastTriedAt","triesCount","doneAt","success","undefined","makeId","length","txt","possible","i","charAt","Math","floor","random","startTask","newTask","TaskPreview","updateTask","removeTask","handleFocusOut","key","value","className","initialValue","save","inputClass","moment","format","onClick","_id","onStartTask","AddTask","state","text","handleChange","ev","target","setState","onAddTask","props","addTask","this","type","onChange","Component","_TaskPage","loadTasks","socketService","updateTaskFromSocket","tasks","map","mapDispatchToProps","dispatch","TaskPage","connect","taskReducer","App","path","component","exact","initialState","rootReducer","combineReducers","action","filter","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"qJAKIA,E,kIAEW,GACbC,MAOF,WACED,EAASE,IAb+B,MAMxCC,UAUF,WACEH,EAAS,MAVTI,GAaF,SAAYC,EAAWC,GACrBN,EAAOI,GAAGC,EAAWC,IAbrBC,IAgBF,SAAaF,EAAWC,GACtBN,EAAOO,IAAIF,EAAWC,IAhBtBE,KAmBF,SAAcH,EAAWI,GACvBT,EAAOQ,KAAKH,EAAWI,K,YCzBrBC,E,OAAQC,EAAMC,OAAO,CACrBC,iBAAiB,IAGN,WACPC,EAAUL,GACV,OAAOM,EAAKD,EAAU,MAAOL,IAFtB,WAINK,EAAUL,GACX,OAAOM,EAAKD,EAAU,OAAQL,IALvB,WAOPK,EAAUL,GACV,OAAOM,EAAKD,EAAU,MAAOL,IARtB,WAUJK,EAAUL,GACb,OAAOM,EAAKD,EAAU,SAAUL,IAIxC,SAAeM,EAAKD,GAApB,+BAAAE,EAAAC,OAAA,uDAA8BC,EAA9B,+BAAuC,MAAOT,EAA9C,+BAAqD,KAArD,oBAAAO,EAAA,MAE0BN,EAAM,CACpBS,IAAI,GAAD,OA1BT,SA0BS,OAAgBL,GACnBI,SACAT,UALZ,cAEcW,EAFd,yBAOeA,EAAIX,MAPnB,sCASQY,QAAQC,IAAR,qBAA0BJ,EAA1B,yCAAiEJ,EAAjE,wBAAyFL,IACzFY,QAAQE,IAAR,MACI,KAAIC,UAAoC,MAAxB,KAAIA,SAASC,QAC7BC,OAAOC,SAASC,OAAO,YAZnC,6DCvBO,IAAMC,EAAc,CACzBC,MAUF,WACE,OAAOC,EAAA,SAVPC,OAoBF,SAAgBC,GACd,OAAOF,EAAA,eAA2BE,KApBlCC,OAWF,SAAgBC,GACd,OAAOJ,EAAA,OAAwBI,IAX/BvB,OAaF,SAAgBwB,GACd,IAAMD,EAgBC,CACLC,MAAO,GACPC,YAAa,GACbC,WAAY,IACZC,UAAW,IAAIC,KACfC,YAAa,KACbC,WAAY,EACZC,OAAQ,KACRC,aAAQC,GAtBV,OADAV,EAAKC,MAAQA,EACNL,EAAA,OAAyBI,IAfhCW,OAoBF,WAGE,IAH2B,IAAbC,EAAY,uDAAH,EACnBC,EAAM,GACNC,EAAW,2BACNC,EAAI,EAAGA,EAAIH,EAAQG,IAC1BF,GAAOC,EAASE,OAAOC,KAAKC,MAAMD,KAAKE,SAAWL,EAASF,SAE7D,OAAOC,GAzBPO,UAuCF,SAAyBpB,GAAzB,eAAAnB,EAAAC,OAAA,kEAAAD,EAAA,MACwBe,EAAA,aAA8BI,IADtD,cACQqB,EADR,yBAESA,GAFT,uC,8ECtCO,SAASC,EAAT,GAAmE,IAA5CtB,EAA2C,EAA3CA,KAAMuB,EAAqC,EAArCA,WAAYC,EAAyB,EAAzBA,WAAYJ,EAAa,EAAbA,UAElDK,EAAiB,SAACC,EAAKC,GACzB,IAAMN,EAAO,eAAQrB,EAAR,eAAe0B,EAAMC,IAClCJ,EAAWF,IAUf,OACI,yBAAKO,UAAU,mCACX,yBAAKA,UAAU,gBACX,6BAASA,UAAU,QACf,kBAAC,IAAD,CAAaA,UAAU,UACvB,kBAAC,IAAD,CACIC,aAAc7B,EAAKC,MACnB6B,KAAM,SAAAH,GAAWF,EAAe,QAASE,IACzCI,WAAW,iBAKnB,wBAAIH,UAAU,eAAc,kBAAC,IAAD,CAAqBA,UAAU,WAA3D,gBACA,yBAAKA,UAAU,yBACX,kBAAC,IAAD,CACIC,aAAmC,KAArB7B,EAAKE,YAAqB,uBAAyBF,EAAKE,YACtE4B,KAAM,SAAAH,GAAWF,EAAe,cAAeE,IAC/CI,WAAW,iBAGnB,yBAAKH,UAAU,QACX,wBAAIA,UAAU,gCAA+B,kBAAC,IAAD,CAAoBA,UAAU,UAA3E,eACA,kBAAC,IAAD,CACIC,aAAc7B,EAAKG,WACnB2B,KAAM,SAAAH,GAAWF,EAAe,aAAcE,IAC9CI,WAAW,iBAGnB,yBAAKH,UAAU,QACX,wBAAIA,UAAU,eAAc,kBAAC,IAAD,CAASA,UAAU,UAA/C,cACA,wBAAIA,UAAU,oBAAoBI,IAAOhC,EAAKI,WAAW6B,OAAO,UAEpE,yBAAKL,UAAU,QACX,wBAAIA,UAAU,eAAc,kBAAC,IAAD,CAAyBA,UAAU,UAA/D,eACA,wBAAIA,UAAU,oBAAoB5B,EAAKO,cAI/C,yBAAKqB,UAAU,2BACOlB,IAAjBV,EAAKS,SACF,yBAAKmB,UAAS,UAAK5B,EAAKS,QAAU,YAAc,aAAlC,6CACV,2BAAIT,EAAKS,QAAU,OAAS,WAGpC,yBAAKmB,UAAU,6BACX,4BAAQM,QAAS,kBAtDXpC,EAsD8BE,EAAKmC,SArDrDX,EAAW1B,GADM,IAACA,GAsDyC8B,UAAU,kBAAzD,UACA,4BAAQM,QAAS,kBApDb,SAAClC,GACbA,EAAKS,SACTW,EAAUpB,GAkDyBoC,CAAYpC,IAAO4B,UAAU,iBAApD,YCrEb,IAAMS,EAAb,2MACIC,MAAQ,CACJC,KAAM,IAFd,EAIIC,aAAe,SAACC,GACZ,IAAMF,EAAOE,EAAGC,OAAOf,MACvB,EAAKgB,SAAS,CAACJ,UANvB,EAQIK,UAAY,WACR,EAAKC,MAAMC,QAAQ,EAAKR,MAAMC,MAC9B,EAAKI,SAAS,CAACJ,KAAM,MAV7B,wEAaQ,OACI,yBAAKX,UAAU,2BACf,4BAAQA,UAAU,eAAeM,QAASa,KAAKH,WAA/C,YACA,2BAAOI,KAAK,OAAOpB,UAAU,iBAAiBqB,SAAUF,KAAKP,aAAcb,MAAOoB,KAAKT,MAAMC,YAhBzG,GAA6BW,aCQvBC,E,2MAOJ5B,WAAa,SAACvB,GACZ,EAAK6C,MAAMtB,WAAWvB,I,EAExB8C,QAAU,SAAC7C,GACT,EAAK4C,MAAMC,QAAQ7C,I,EAErBuB,WAAa,SAAC1B,GACZ,EAAK+C,MAAMrB,WAAW1B,I,EAExBsB,UAAY,SAAOpB,GAAP,eAAAnB,EAAAC,OAAA,kEAAAD,EAAA,MACYa,EAAY0B,UAAUpB,IADlC,OACJqB,EADI,OAEV,EAAKwB,MAAMtB,WAAWF,GAFZ,sC,mFAbV0B,KAAKF,MAAMO,YACXC,EAAcvF,QACduF,EAAcpF,GAAG,oBAAqB8E,KAAKF,MAAMS,wB,+BAiBzC,IAAD,OACDC,EAAQR,KAAKF,MAAMU,MACzB,OACE,yBAAK3B,UAAU,aACb,wBAAIA,UAAU,eAAd,SACC2B,EAAMC,KAAI,SAAAxD,GAAI,OAAI,kBAACsB,EAAD,CAAatB,KAAMA,EAAM0B,IAAK1B,EAAKmC,IAAKZ,WAAY,EAAKA,WAAYC,WAAY,EAAKA,WAAYJ,UAAW,EAAKA,eACrI,kBAAC,EAAD,CAAS0B,QAASC,KAAKD,e,GA5BPI,aAuClBO,EAAqB,CACzBL,UC/CK,WACL,OAAO,SAAOM,GAAP,eAAA7E,EAAAC,OAAA,2EAAAD,EAAA,MAGiBa,EAAYC,SAH7B,OAGG4D,EAHH,OAIHG,EAAS,CAAEV,KAAM,YAAaO,UAJ3B,gDAMHrE,QAAQC,IAAR,8BANG,0DD+CPoC,WCjBK,SAAoBvB,GACzB,OAAO,SAAO0D,GAAP,SAAA7E,EAAAC,OAAA,uDACL4E,EAAS,CAAEV,KAAM,cAAehD,SAD3B,oBAAAnB,EAAA,MAGGa,EAAYK,OAAOC,IAHtB,OAIHqD,EAAchF,KAAK,kBAAmB2B,EAAKmC,KAC3CkB,EAAchF,KAAK,cAAe2B,GAL/B,gDAOHd,QAAQC,IAAR,4BAPG,0DDiBP2D,QCtCK,SAAiB7C,GACtB,OAAO,SAAOyD,GAAP,eAAA7E,EAAAC,OAAA,2EAAAD,EAAA,MAEgBa,EAAYjB,OAAOwB,IAFnC,OAEGD,EAFH,OAGH0D,EAAS,CAAEV,KAAM,WAAYhD,SAH1B,gDAKHd,QAAQC,IAAR,4BALG,0DDsCPqC,WC7BK,SAAoB1B,GACzB,OAAO,SAAO4D,GAAP,SAAA7E,EAAAC,OAAA,2EAAAD,EAAA,MAEGa,EAAYG,OAAOC,IAFtB,OAGH4D,EAAS,CAAEV,KAAM,cAAelD,WAH7B,+CAKHZ,QAAQC,IAAR,6BALG,yDD6BPmE,qBCRK,SAA8BtD,GAGnC,OAFAd,QAAQC,IAAI,YAEL,SAACuE,GACNA,EAAS,CAAEV,KAAM,cAAehD,YDOvB2D,EAAWC,aAbA,SAAAtB,GACtB,MAAO,CACLiB,MAAOjB,EAAMuB,YAAYN,SAWoBE,EAAzBG,CAA6CT,GEvCtDW,MAZf,WACE,OACE,yBAAKlC,UAAU,OACb,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOmC,KAAK,IAAIC,UAAYL,EAAWM,OAAK,Q,iCCVhDC,EAAe,CACnBX,MAAO,ICGT,IAAMY,EAAcC,YAAgB,CAClCP,YDDK,WAAyD,IAApCvB,EAAmC,uDAA3B4B,EAAcG,EAAa,uDAAJ,GACzD,OAAQA,EAAOrB,MACb,IAAK,YACH,OAAO,eACFV,EADL,CAEEiB,MAAOc,EAAOd,QAElB,IAAK,cACH,OAAO,eACFjB,EADL,CAEEiB,MAAOjB,EAAMiB,MAAMe,QAAO,SAAAtE,GAAI,OAAIA,EAAKmC,MAAQkC,EAAOvE,YAE1D,IAAK,cACH,OAAO,eACFwC,EADL,CAEEiB,MAAOjB,EAAMiB,MAAMC,KAAI,SAAAxD,GAAI,OAAKA,EAAKmC,MAAQkC,EAAOrE,KAAKmC,IAAOkC,EAAOrE,KAAOA,OAElF,IAAK,WACH,OAAO,eACFsC,EADL,CAEEiB,MAAM,GAAD,mBAAMjB,EAAMiB,OAAZ,CAAmBc,EAAOrE,SAGnC,QACE,OAAOsC,MCpBPiC,EAAmBhF,OAAOiF,sCAAwCC,IAE3DC,EAAQC,YAAYR,EAAaI,EAAiBK,YAAgBC,OCJ/EC,IAASC,OACP,kBAAC,IAAD,CAAUL,MAAQA,GAChB,kBAAC,EAAD,OAEFM,SAASC,eAAe,U","file":"static/js/main.c5a038d5.chunk.js","sourcesContent":["import io from 'socket.io-client';\r\n\r\nconst BASE_URL =\r\n  process.env.NODE_ENV === 'production' ? '/' : '//localhost:3030';\r\n\r\nlet socket;\r\n\r\nexport default {\r\n  setup,\r\n  terminate,\r\n  on,\r\n  off,\r\n  emit\r\n};\r\n\r\nfunction setup() {\r\n  socket = io(BASE_URL);\r\n}\r\n\r\nfunction terminate() {\r\n  socket = null;\r\n}\r\n\r\nfunction on(eventName, cb) {\r\n  socket.on(eventName, cb);\r\n}\r\n\r\nfunction off(eventName, cb) {\r\n  socket.off(eventName, cb);\r\n}\r\n\r\nfunction emit(eventName, data) {\r\n  socket.emit(eventName, data);\r\n}\r\n","import Axios from 'axios';\r\n\r\nconst BASE_URL = process.env.NODE_ENV === 'production'\r\n    ? '/api/'\r\n    : '//localhost:3030/api/'\r\n\r\n\r\nvar axios = Axios.create({\r\n    withCredentials: true\r\n});\r\n\r\nexport default {\r\n    get(endpoint, data) {\r\n        return ajax(endpoint, 'GET', data)\r\n    },\r\n    post(endpoint, data) {\r\n        return ajax(endpoint, 'POST', data)\r\n    },\r\n    put(endpoint, data) {\r\n        return ajax(endpoint, 'PUT', data)\r\n    },\r\n    delete(endpoint, data) {\r\n        return ajax(endpoint, 'DELETE', data)\r\n    }\r\n}\r\n\r\nasync function ajax(endpoint, method = 'get', data = null) {\r\n    try {\r\n        const res = await axios({\r\n            url: `${BASE_URL}${endpoint}`,\r\n            method,\r\n            data\r\n        })\r\n        return res.data;\r\n    } catch (err) {\r\n        console.log(`Had Issues ${method}ing to the backend, endpoint: ${endpoint}, with data: ${data}`);\r\n        console.dir(err);\r\n        if (err.response && err.response.status === 401) {\r\n            window.location.assign('/#/login');\r\n        }\r\n        throw err;\r\n    }\r\n}","import httpService from './httpService';\r\n\r\n\r\nexport const taskService = {\r\n  query,\r\n  remove,\r\n  update,\r\n  create,\r\n  makeId,\r\n  startTask\r\n};\r\n\r\n\r\n\r\nfunction query() {\r\n  return httpService.get(`task`);\r\n}\r\nfunction update(task) {\r\n  return httpService.put(`task`, task);\r\n}\r\nfunction create(title) {\r\n  const task = _getEmptyTask()\r\n  task.title = title;\r\n  return httpService.post(`task`, task);\r\n}\r\nfunction remove(taskId) {\r\n  return httpService.delete(`task/${taskId}`);\r\n}\r\nfunction makeId(length = 5) {\r\n  var txt = '';\r\n  var possible = '0123456789abcdefgABCDEFG';\r\n  for (var i = 0; i < length; i++) {\r\n    txt += possible.charAt(Math.floor(Math.random() * possible.length));\r\n  }\r\n  return txt;\r\n}\r\nfunction _getEmptyTask() {\r\n  return {\r\n    title: \"\",\r\n    description: \"\",\r\n    importance: \"3\",\r\n    createdAt: new Date(),\r\n    lastTriedAt: null,\r\n    triesCount: 0,\r\n    doneAt: null,\r\n    success:undefined\r\n  }\r\n}\r\nasync function startTask(task) {\r\n  const newTask = await httpService.put(`task/start`, task);\r\n  return newTask;\r\n}","import React from 'react'\r\nimport EditableLabel from 'react-editable-label'\r\nimport moment from 'moment';\r\nimport { MdSubtitles } from 'react-icons/md';\r\nimport { AiOutlineAlignRight } from 'react-icons/ai';\r\nimport { BsFillBarChartFill } from 'react-icons/bs';\r\nimport { MdTimer } from 'react-icons/md';\r\nimport { BsArrowCounterclockwise } from 'react-icons/bs';\r\n\r\n\r\nexport function TaskPreview({ task, updateTask, removeTask, startTask }) {\r\n\r\n    const handleFocusOut = (key, value) => {\r\n        const newTask = { ...task, [key]: value }\r\n        updateTask(newTask)\r\n    }\r\n    const onRemoveTask = (taskId) => {\r\n        removeTask(taskId)\r\n    }\r\n    const onStartTask = (task) => {\r\n        if (task.success) return;\r\n        startTask(task)\r\n    }\r\n\r\n    return (\r\n        <div className=\"task-preview flex space-between\">\r\n            <div className=\"task-details\">\r\n                <section className=\"flex\">\r\n                    <MdSubtitles className=\"icons\" />\r\n                    <EditableLabel\r\n                        initialValue={task.title}\r\n                        save={value => { handleFocusOut('title', value) }}\r\n                        inputClass='title-input'\r\n                    />\r\n\r\n                </section>\r\n\r\n                <h5 className=\"header-span\"><AiOutlineAlignRight className=\"icons \" /> Description</h5>\r\n                <div className=\"description-container\">\r\n                    <EditableLabel\r\n                        initialValue={task.description === '' ? 'Enter description...' : task.description}\r\n                        save={value => { handleFocusOut('description', value) }}\r\n                        inputClass='title-input'\r\n                    />\r\n                </div>\r\n                <div className=\"flex\">\r\n                    <h5 className=\"importance-label header-span\"><BsFillBarChartFill className=\"icons\" />Importance:</h5>\r\n                    <EditableLabel\r\n                        initialValue={task.importance}\r\n                        save={value => { handleFocusOut('importance', value) }}\r\n                        inputClass='title-input'\r\n                    />\r\n                </div>\r\n                <div className=\"flex\">\r\n                    <h5 className=\"header-span\"><MdTimer className=\"icons\" />CreatedAt:</h5>\r\n                    <h6 className=\"create-and-count\">{moment(task.createdAt).format('LLLL')}</h6>\r\n                </div>\r\n                <div className=\"flex\">\r\n                    <h5 className=\"header-span\"><BsArrowCounterclockwise className=\"icons\" />triesCount:</h5>\r\n                    <h6 className=\"create-and-count\">{task.triesCount}</h6>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"flex btn-container\">\r\n                {task.success !== undefined &&\r\n                    <div className={`${task.success ? \"done-task\" : \"feild-task\"} task-success flex column justify-center`}>\r\n                        <p>{task.success ? 'Done' : 'Failed'}</p>\r\n                    </div>\r\n                }\r\n                <div className=\"flex column space-between\">\r\n                    <button onClick={() => onRemoveTask(task._id)} className=\"remove-btn btn\">Delete</button>\r\n                    <button onClick={() => onStartTask(task)} className=\"start-btn btn\">Start</button>\r\n                </div>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport class AddTask extends Component {\r\n    state = {\r\n        text: ''\r\n    }\r\n    handleChange = (ev) =>{\r\n        const text = ev.target.value\r\n        this.setState({text})\r\n    }\r\n    onAddTask = () => {\r\n        this.props.addTask(this.state.text)\r\n        this.setState({text: ''})\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"flex add-task-container\">\r\n            <button className=\"add-task-btn\" onClick={this.onAddTask}>Add Task</button>\r\n            <input type=\"text\" className=\"add-task-input\" onChange={this.handleChange} value={this.state.text}/>\r\n        </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport socketService from '../services/socketService';\r\nimport { loadTasks, updateTask, addTask, removeTask, updateTaskFromSocket } from '../store/actions/taskActions';\r\nimport { TaskPreview } from '../cmps/TaskPreview';\r\nimport { AddTask } from '../cmps/AddTask';\r\nimport { taskService } from '../services/taskService';\r\n\r\n\r\nclass _TaskPage extends Component {\r\n\r\n  componentDidMount() {\r\n    this.props.loadTasks();\r\n    socketService.setup();\r\n    socketService.on('send updated task', this.props.updateTaskFromSocket);\r\n  }\r\n  updateTask = (task) => {\r\n    this.props.updateTask(task);\r\n  }\r\n  addTask = (title) => {\r\n    this.props.addTask(title)\r\n  }\r\n  removeTask = (taskId) => {\r\n    this.props.removeTask(taskId)\r\n  }\r\n  startTask = async (task) => {\r\n    const newTask = await taskService.startTask(task)\r\n    this.props.updateTask(newTask)\r\n  }\r\n\r\n\r\n  render() {\r\n    const tasks = this.props.tasks\r\n    return (\r\n      <div className=\"task-page\">\r\n        <h2 className=\"task-header\">Tasks</h2>\r\n        {tasks.map(task => <TaskPreview task={task} key={task._id} updateTask={this.updateTask} removeTask={this.removeTask} startTask={this.startTask} />)}\r\n        <AddTask addTask={this.addTask} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    tasks: state.taskReducer.tasks,\r\n  };\r\n};\r\nconst mapDispatchToProps = {\r\n  loadTasks,\r\n  updateTask,\r\n  addTask,\r\n  removeTask,\r\n  updateTaskFromSocket\r\n};\r\n\r\nexport const TaskPage = connect(mapStateToProps, mapDispatchToProps)(_TaskPage);\r\n","import { taskService } from \"../../services/taskService\";\r\nimport socketService from \"../../services/socketService\";\r\n\r\nexport function loadTasks() {\r\n  return async (dispatch) => {\r\n    try {\r\n\r\n      const tasks = await taskService.query();\r\n      dispatch({ type: \"SET_TASKS\", tasks });\r\n    } catch (err) {\r\n      console.log(`ERROR: while loading tasks`);\r\n    }\r\n  };\r\n}\r\nexport function addTask(title) {\r\n  return async (dispatch) => {\r\n    try {\r\n      const task = await taskService.create(title);\r\n      dispatch({ type: \"ADD_TASK\", task });\r\n    } catch (err) {\r\n      console.log(`ERROR: while adding task`);\r\n    }\r\n  };\r\n}\r\nexport function removeTask(taskId) {\r\n  return async (dispatch) => {\r\n    try {\r\n      await taskService.remove(taskId);\r\n      dispatch({ type: \"REMOVE_TASK\", taskId });\r\n    } catch (err) {\r\n      console.log(`ERROR: while remove board`);\r\n    }\r\n  };\r\n}\r\nexport function updateTask(task) {\r\n  return async (dispatch) => {\r\n    dispatch({ type: \"UPDATE_TASK\", task });\r\n    try {\r\n      await taskService.update(task);\r\n      socketService.emit('connect to task', task._id);\r\n      socketService.emit('update task', task);\r\n    } catch (err) {\r\n      console.log(`ERROR: while update task`);\r\n    }\r\n  };\r\n}\r\nexport function updateTaskFromSocket(task) {\r\n  console.log('socket!!');\r\n  //Someone else updated the task\r\n  return (dispatch) => {\r\n    dispatch({ type: \"UPDATE_TASK\", task });\r\n  };\r\n}\r\n","import React from 'react';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\n// import { Link } from 'react-router-dom'\n\nimport {TaskPage} from './pages/TaskPage';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path=\"/\" component={ TaskPage } exact />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","\r\nconst initialState = {\r\n  tasks: []\r\n};\r\n\r\nexport function taskReducer(state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case 'SET_TASKS':\r\n      return {\r\n        ...state,\r\n        tasks: action.tasks\r\n      };\r\n    case 'REMOVE_TASK':\r\n      return {\r\n        ...state,\r\n        tasks: state.tasks.filter(task => task._id !== action.taskId)\r\n      };\r\n    case 'UPDATE_TASK':\r\n      return {\r\n        ...state,\r\n        tasks: state.tasks.map(task => (task._id === action.task._id) ? action.task : task)\r\n      };\r\n    case \"ADD_TASK\":\r\n      return {\r\n        ...state,\r\n        tasks: [...state.tasks, action.task],\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createStore, applyMiddleware, compose, combineReducers } from 'redux'\r\n\r\nimport thunk from 'redux-thunk';\r\nimport { taskReducer } from './reducers/taskReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  taskReducer\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport App from './App';\nimport './assets/styles/global.scss'\nimport { store } from './store/store';\n\nReactDOM.render(\n  <Provider store={ store }>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)"],"sourceRoot":""}